@startuml

cloud Ethereum <<Ropsten Network>> {
    storage PandoraHooks
    storage PandoraMarket

    package WorkerNodes {
        storage SomeWorkerNode
    }
    package Kernels {
    }
    package Datasets {
    }
    package CognitiveJobs {
    }

    PandoraMarket -up-> Kernels
    PandoraMarket -up-> Datasets
    PandoraHooks -> CognitiveJobs
    PandoraHooks --> WorkerNodes

}

cloud IPFS {
}

package Server {
    rectangle Node.js {
        control Boxproxy
        Boxproxy --> PandoraHooks: Reads,\nlistens &\ncreates workers
        Boxproxy --> PandoraMarket: Reads &\nlistens
    }
    folder BoxplorerSource
    folder WebClientSource
}

package Worker {
    control Pynode
    Pynode --> SomeWorkerNode: Listens
    Pynode --> IPFS: Downloads\n/ uploads
}

rectangle Desktop as Desktop1 <<Business Client or Data scientist>> {
    actor Client
    rectangle Browser as Browser1 <<Market dApp>> {
        control WebClient
        control Web3.js
        control IPFS.js
        WebClient -- Web3.js
        WebClient -- IPFS.js
        WebClient <-- WebClientSource
        Web3.js --> PandoraMarket: Reads &\ncreates\ndatasets,\nkernels
        Web3.js --> PandoraHooks: Creates\ncognitive\njobs
        IPFS.js --> IPFS: Uploads\nkernels,\ndatasets
    }
    Client - Browser1
}

rectangle Desktop as Desktop2 <<Network Admin>> {
    actor Admin
    rectangle Browser as Browser2 <<pandora.network>> {
        control Boxplorer
        Boxplorer <-- BoxplorerSource
        Boxplorer --> Boxproxy: Websockets
    }
    Admin - Browser2
}

@enduml